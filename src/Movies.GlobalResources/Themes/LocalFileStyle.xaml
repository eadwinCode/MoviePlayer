<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:presentationCmd="clr-namespace:PresentationExtension;assembly=PresentationExtension"
                    xmlns:presentationConvter="clr-namespace:PresentationExtension.Converters;assembly=PresentationExtension" 
                    xmlns:controls="clr-namespace:Movies.GlobalResources.LoadingAnimation"
                    xmlns:resImages="clr-namespace:Movies.GlobalResources.ImagePathConverter">
    
    <presentationConvter:BooleanInversion x:Key="BooleanInversion"/>
    <resImages:ImageConverter x:Key="ImagePathConverter"/>
    <Style x:Key="LoadingIndicatorThreeDotsStyle"  
           TargetType="{x:Type controls:LoadingIndicator}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LoadingIndicator}">
                    <Border x:Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SizeStates">
                                <VisualState x:Name="Large" />
                                <VisualState x:Name="Small" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive"/>
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.000" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas0" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.100" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.200" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.300" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas3" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.400" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas4" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.500" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas5" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.600" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas6" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.700" RepeatBehavior="Forever" Storyboard.TargetName="PART_Canvas7" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.000" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.100" Value="0.3"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.800" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border.Resources>
                            <Style TargetType="{x:Type Canvas}">
                                <Setter Property="Opacity" Value="0.3"/>
                            </Style>

                            <Style TargetType="{x:Type Path}">
                                <Setter Property="StrokeThickness" Value="10"/>
                            </Style>
                        </Border.Resources>

                        <Grid Background="Transparent" Width="40" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                            </Grid.RenderTransform>

                            <Canvas x:Name="PART_Canvas0">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="-14"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 10,0 A 40,40 0 0 1 30,0"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas1">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="12" Y="-12"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 40,14 A 40,40 0 0 0 24,0"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas2">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="14" Y="0"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 40,10 A 40,40 0 0 1 40,30"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas3">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="12" Y="12"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 40,24 A 40,40 0 0 1 24,40"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas4">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="0" Y="14"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 10,40 A 40,40 0 0 0 30,40"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas5">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-12" Y="12"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 0,24 A 40,40 0 0 0 14,40"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas6">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-14" Y="0"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 0,10 A 40,40 0 0 0 0,30"/>
                            </Canvas>
                            <Canvas x:Name="PART_Canvas7">
                                <Canvas.RenderTransform>
                                    <TranslateTransform X="-12" Y="-12"/>
                                </Canvas.RenderTransform>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 0,14 A 40,40 0 0 1 14,0"/>
                            </Canvas>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoadingIndicatorWaveStyleKey" TargetType="{x:Type controls:LoadingIndicator}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:LoadingIndicator}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Rectangle">
                            <Setter Property="Width" Value="6"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>

                    <Border Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SizeStates">
                                <VisualState x:Name="Large" />
                                <VisualState x:Name="Small" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive"/>
                                <VisualState x:Name="Active">
                                    <Storyboard SpeedRatio="{TemplateBinding SpeedRatio}" RepeatBehavior="Forever" Duration="0:0:1.000">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.100" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.350" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.150" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.450" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect3" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.250" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.300" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.500" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rect4" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.300" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.350" Value="1.6"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.550" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>

                            <Rectangle x:Name="PART_Rect0" Grid.Column="0" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="PART_Rect1" Grid.Column="2" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="PART_Rect2" Grid.Column="4" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="PART_Rect3" Grid.Column="6" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="PART_Rect4" Grid.Column="8" Fill="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{Binding Path=Uid,
            RelativeSource={RelativeSource Self},Converter={StaticResource ImagePathConverter}}"/>
    </Style>
    
    <DataTemplate x:Key="HomeFolderTemplate">
        <presentationCmd:CustomButton Background="Transparent" Margin="4" x:Name="main" 
                        Style="{StaticResource ContentContainer}" 
                        IsEnabled="{Binding IsLoading,Converter={StaticResource BooleanInversion}}"
                        BorderBrush="Transparent" BorderThickness="0"
                        presentationCmd:VideoItemDoubleClick.DoubleClickCommand="{Binding 
        DataContext.OpenFolderCommand,RelativeSource={RelativeSource AncestorType=Page,Mode=FindAncestor}}"
                        presentationCmd:VideoItemDoubleClick.DoubleClickCommandParameter="{Binding 
        DataContext, RelativeSource={RelativeSource Self}}" 
                        Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                        TextBlock.Foreground="{DynamicResource Theme.Foreground}" 
                        TextBlock.FontStyle="Italic">
            <Grid >
                <Grid Width="140" Height="180" HorizontalAlignment="Left" VerticalAlignment="Top"  >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Border Panel.ZIndex="10" HorizontalAlignment="Right" 
                                VerticalAlignment="Top"  CornerRadius="5"  
                                Height="15"  Margin="2,3,2,0" >
                            <Border.Background>
                                <ImageBrush ImageSource="/Movies.GlobalResources;component/Images/check-1-icon.png" 
                                        TileMode="Tile"  
                                        Stretch="None" 
                                        ViewportUnits="Absolute" Opacity="0.3"/>
                            </Border.Background>
                            <TextBlock Text="{Binding FolderChildCount, UpdateSourceTrigger=PropertyChanged}" 
                                       TextAlignment="Center" Padding="5" FontSize="11" VerticalAlignment="Center" />
                        </Border>
                        <controls:LoadingIndicator 
                            HorizontalAlignment="Center" Style="{DynamicResource LoadingIndicatorWaveStyleKey}"
                            VerticalAlignment="Bottom"  Margin="0,0,0,40" Height="20"
                            SpeedRatio="1" Foreground="{DynamicResource Theme.HighlightColor}" 
                            IsActive="{Binding IsLoading}"/>
                        <Path  Fill="{DynamicResource Theme.HighlightColor}" x:Name="path" 
                               StrokeThickness=".5" Stroke="Black" 
                               Data="M10,4H4C2.89,4 2,4.89 2,6V18C2,19.1 2.9,20 4,
                               20H20C21.1,20 22,19.1 22,18V8C22,6.89 
                               21.1,6 20,6H12L10,4Z" ToolTip="{Binding FileName}" >
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="6" ScaleY="5.5"/>
                                    <RotateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <Grid Height="60" VerticalAlignment="Bottom" Opacity=".8"  
                          x:Name="footer" Grid.Row="1" Panel.ZIndex="-8">
                        <TextBlock Margin="2" FontSize="13"    
                                   TextAlignment="Center"
                                   Text="{Binding FileName,UpdateSourceTrigger=PropertyChanged}" 
                                   VerticalAlignment="Top"
                                   TextWrapping="Wrap"  TextTrimming="WordEllipsis" Grid.Row="0" 
                                   ToolTipService.InitialShowDelay="1500"
                                   ToolTip="{Binding FullName,UpdateSourceTrigger=PropertyChanged}"    />
                    </Grid>
                </Grid>
            </Grid>
        </presentationCmd:CustomButton>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:.2" Storyboard.TargetName="footer"
                                             Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:.2" Storyboard.TargetName="footer"
                                             Storyboard.TargetProperty="Opacity" To="0.8"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <DataTrigger Binding="{Binding IsLoading}" Value="true">
                <Setter  Property="Cursor" Value="Wait"/>
                <Setter TargetName="path" Property="Opacity" Value=".8"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>

    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFD6D6D6"/>
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="#FFE7EAEA"/>


    <Style x:Key="IncreasingRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#FFD6DBE9" CornerRadius="1,0,0,1"
                               BorderBrush="Transparent" BorderThickness="1"
                                Height="13" 
                                Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="DecreasingRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Gray"   CornerRadius="0,1,1,0"
                                BorderBrush="DarkGray" BorderThickness="0,1,1,1"
                                Height="10" 
                                Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VolumeIncreasingRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#FFD6DBE9" CornerRadius="1,0,0,1"
                            BorderBrush="Transparent" BorderThickness="1"
                            Height="8" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="VolumeDecreasingRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Gray"   CornerRadius="0,1,1,0"
                                BorderBrush="DarkGray" BorderThickness="0,1,1,1"
                                Height="6" 
                                Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiniSliderIncreasingRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="#FFD6DBE9"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="1,0,0,1"
                            BorderBrush="Transparent" BorderThickness="1"
                            Height="7" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MiniSliderDecreasingRepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border  Background="{TemplateBinding Background}" CornerRadius="0,1,1,0"
                             BorderBrush="DarkGray" BorderThickness="0,1,1,1"
                             Height="3" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid Width="{TemplateBinding Width}" Height="20"  UseLayoutRounding="True" >
            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" 
                      Fill="{StaticResource SliderThumb.Static.Background}" 
                      Stretch="Fill" SnapsToDevicePixels="True" 
                      Stroke="{StaticResource SliderThumb.Static.Border}" 
                      StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" 
                            Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" 
                            Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="VolumeSliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid Width="{TemplateBinding Width}" Height="10"  UseLayoutRounding="True" >
            <Path x:Name="grip" Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z" 
                      Fill="{StaticResource SliderThumb.Static.Background}" 
                      Stretch="Fill" SnapsToDevicePixels="True" 
                      Stroke="{StaticResource SliderThumb.Static.Border}" 
                      StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" 
                            Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" 
                            Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" 
                            Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="Transparent" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="TrackBackground" BorderBrush="Transparent"
                            BorderThickness="1" Background="Transparent" 
                            Height="4.0"  Grid.Row="1" VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" 
                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                       Height="4.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1" >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" 
                                      Style="{StaticResource IncreasingRepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" 
                                      Style="{StaticResource DecreasingRepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="18" 
                                   OverridesDefaultStyle="True" 
                                   Template="{StaticResource SliderThumbHorizontalDefault}"
                                   VerticalAlignment="Center" Width="2" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Thumb" Property="Width" Value="20"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MiniSliderHorizontalTemplate" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="Transparent" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="TrackBackground" BorderBrush="Transparent"
                            BorderThickness="1" Background="Transparent" 
                            Height="4.0"  Grid.Row="1" VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" 
                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                       Height="4.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1" >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" 
                                      Style="{StaticResource MiniSliderIncreasingRepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" 
                                      Style="{StaticResource MiniSliderDecreasingRepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False"  
                                   OverridesDefaultStyle="True" Height="12"
                                   Template="{StaticResource SliderThumbHorizontalDefault}"
                                   VerticalAlignment="Center" Width="1.5" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Thumb" Property="Width" Value="10"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VolumeSliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="Transparent" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="TrackBackground" BorderBrush="Transparent"
                            BorderThickness="1" Background="Transparent" 
                            Height="4.0"  Grid.Row="1" VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" 
                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                       Height="4.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1" >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" 
                                      Style="{StaticResource VolumeIncreasingRepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" 
                                      Style="{StaticResource VolumeDecreasingRepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="10" 
                               OverridesDefaultStyle="True" 
                               Template="{StaticResource SliderThumbHorizontalDefault}"
                               VerticalAlignment="Center" Width="2" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Thumb" Property="Width" Value="6"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="VolumeSliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource VolumeSliderHorizontal}"/>

    </Style>

    <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FFD6DBE9"/>
    <SolidColorBrush x:Key="ProgressBar.Background" Color="Gray"/>
    <SolidColorBrush x:Key="ProgressBar.Border" Color="DarkGray"/>
    <Style x:Key="MovieHubProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>