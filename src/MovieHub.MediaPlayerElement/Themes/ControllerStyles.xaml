<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControl="clr-namespace:MovieHub.MediaPlayerElement.CustomControls"
                     xmlns:MediaElement="clr-namespace:MovieHub.MediaPlayerElement"
                    xmlns:enumConverter="clr-namespace:Movies.Enums.Converters;assembly=Movies.Enums"
                    xmlns:enums="clr-namespace:Movies.Enums;assembly=Movies.Enums"
                    xmlns:util="clr-namespace:Common.Util;assembly=Common"
                    xmlns:local="clr-namespace:MovieHub.MediaPlayerElement">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Movies.GlobalResources;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <enumConverter:EnumConverter x:Key="EnumConverter"/>

    <Style TargetType="Button" x:Key="ControlButtonStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="16" SnapsToDevicePixels="True" x:Name="border" 
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border Opacity=".7" x:Name="contentPresenter" Background="Transparent" >
                            <Grid >
                                <ContentPresenter HorizontalAlignment="Center"   
                                                  VerticalAlignment="Center"  />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" >
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.99"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FullScreenToggle" TargetType="Button" BasedOn="{StaticResource ControlButtonStyle}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="16" SnapsToDevicePixels="True" x:Name="border" 
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border Opacity=".7" x:Name="contentPresenter" Background="Transparent" ToolTip="FullScreen" >
                            <Grid >
                                <Path x:Name="pathImg" Stroke="White" HorizontalAlignment="Center" StrokeThickness="2.5"
                                      Data="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"  
                                      VerticalAlignment="Center" >
                                    <Path.LayoutTransform>
                                        <ScaleTransform ScaleX=".9" ScaleY=".75"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WindowFullScreenState,RelativeSource={RelativeSource AncestorType=MediaElement:MediaPlayerElement}}" Value="FullScreen">
                            <Setter Property="Data" TargetName="pathImg" Value="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"/>
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Restore"/>
                            <Setter Property="LayoutTransform" >
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" >
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.99"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ControlMaxMinButtonStyle" >
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  SnapsToDevicePixels="True" x:Name="border" Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}">
                        <Image x:Name="contentPresenter" Margin="0" SnapsToDevicePixels="True"
                               Uid="minimize.png" Opacity=".7" ToolTip="Minimize Video" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MediaPlayerElement.MediaPlayerViewType,RelativeSource={RelativeSource AncestorType=MediaElement:MovieControl}}" Value="MiniMediaPanel">
                            <Setter Property="Image.Uid" TargetName="contentPresenter" Value="maximize.png"/>
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Maximize Video"/>
                        </DataTrigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1"  TargetName="contentPresenter"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.999"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Image.Uid" TargetName="contentPresenter" 
                                    Value="minimize.png"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="PauseorPlayControlButtonStyle" >
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  SnapsToDevicePixels="True" x:Name="border" Width="{TemplateBinding Width}" 
                             Height="{TemplateBinding Height}">
                        <Image x:Name="contentPresenter" Margin="0" SnapsToDevicePixels="True"
                               Uid="play-button.png" Opacity=".7" ToolTip="Play" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MediaPlayerElement.IsPlaying,RelativeSource={RelativeSource AncestorType=MediaElement:MovieControl}}" Value="True">
                            <Setter Property="Image.Uid" TargetName="contentPresenter" Value="pause.png"/>
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Pause"/>
                        </DataTrigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" 
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1"  TargetName="contentPresenter"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.999"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Image.Uid" TargetName="contentPresenter" 
                                    Value="play-button (1).png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="lastSeenBtnStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="#FFA56618"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  SnapsToDevicePixels="True" 
                             Background="{TemplateBinding Background}" 
                             Padding="{TemplateBinding Padding}"   
                             x:Name="border" CornerRadius="2"     
                             Width="{TemplateBinding Width}"    
                             Height="{TemplateBinding Height}">
                        <ContentPresenter x:Name="contentPresenter" Opacity=".7" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1"  TargetName="contentPresenter"/>
                            <Setter Property="Background" Value="#FF426390"  TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.99"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RepeatButtonStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="16" SnapsToDevicePixels="True"  x:Name="border"  
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                        <Image Opacity=".4" x:Name="contentPresenter"  Uid="repeat.png" ToolTip="Repeat Off" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MediaDetailProps.RepeatMode,RelativeSource={RelativeSource AncestorType=MediaElement:MovieControl},
                            Converter={StaticResource EnumConverter},ConverterParameter={x:Type enums:RepeatMode}}" Value="Repeat">
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Repeat All"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".7"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MediaDetailProps.RepeatMode,RelativeSource={RelativeSource AncestorType=MediaElement:MovieControl},
                            Converter={StaticResource EnumConverter},ConverterParameter={x:Type enums:RepeatMode}}" Value="RepeatOnce">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Repeat Once"/>
                        </DataTrigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.99"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border"  Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".3"/>

                            <Setter Property="Background" TargetName="border" Value="#FF18170D"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>

                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="RepeatButtonStyle1">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="16" SnapsToDevicePixels="True"  x:Name="border"  Background="Transparent"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                        <Path Data="M2,5.27L3.28,4L20,20.72L18.73,22L15.73,19H7V22L3,18L7,14V17H13.73L7,10.27V11H5V8.27L2,5.27M17,13H19V17.18L17,15.18V13M17,5V2L21,6L17,10V7H8.82L6.82,5H17Z"
                              Opacity=".7" x:Name="contentPresenter" Fill="WhiteSmoke" ToolTip="Repeat Off" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MediaDetailProps.RepeatMode,RelativeSource={RelativeSource AncestorType=MediaElement:MovieControl},
                            Converter={StaticResource EnumConverter},ConverterParameter={x:Type enums:RepeatMode}}" Value="Repeat">
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Repeat All"/>
                            <Setter Property="Data" TargetName="contentPresenter" 
                                    Value="M17,17H7V14L3,18L7,22V19H19V13H17M7,7H17V10L21,6L17,2V5H5V11H7V7Z"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MediaDetailProps.RepeatMode,RelativeSource={RelativeSource AncestorType=MediaElement:MovieControl},
                            Converter={StaticResource EnumConverter},ConverterParameter={x:Type enums:RepeatMode}}" Value="RepeatOnce">
                            <Setter Property="Data" TargetName="contentPresenter" 
                                    Value="M13,15V9H12L10,10V11H11.5V15M17,17H7V14L3,18L7,22V19H19V13H17M7,7H17V10L21,6L17,2V5H5V11H7V7Z"/>
                            <Setter Property="ToolTip" TargetName="contentPresenter" Value="Repeat Once"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="LayoutTransform" TargetName="contentPresenter">
                                <Setter.Value>
                                    <ScaleTransform ScaleX=".99" ScaleY="0.99"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="border"  Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value=".3"/>

                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>

                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControl:MediaSlider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
    </Style>

    <Style x:Key="MiniTemplate" TargetType="{x:Type customControl:MediaSlider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource MiniSliderHorizontalTemplate}"/>
    </Style>


</ResourceDictionary>